import{decodeHexString as a,encodeHexString as d}from"/-/deno.land/x/web_bson@v0.2.3/utils.ts?v=l7tvw53z";import{BSONTypeError as f}from"/-/deno.land/x/web_bson@v0.2.3/src/error.ts?v=l7tvw53z";var c=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i,s=x=>typeof x=="string"&&c.test(x),p=x=>{if(!s(x))throw new f('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" or "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".');let t=x.replace(/-/g,"");return a(t)},i=new TextEncoder().encode("0123456789abcdef"),u=new TextDecoder,h=(x,t=!0)=>{if(!t)return d(x);let r=new Uint8Array(36),n=0,e=0;for(;n<x.length;){if(e===8||e===13||e===18||e===23){r[e]=45,e++;continue}let o=x[n];r[e]=i[o>>4],r[e+1]=i[15&o],e+=2,n++}return u.decode(r)};export{h as bufferToUuidHexString,p as uuidHexStringToBuffer,s as uuidValidateString};
