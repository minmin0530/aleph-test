import{Binary as d,BinarySizes as a}from"/-/deno.land/x/web_bson@v0.2.3/src/binary.ts?v=l7tvw53z";import{bufferToUuidHexString as x,uuidHexStringToBuffer as u,uuidValidateString as l}from"/-/deno.land/x/web_bson@v0.2.3/src/uuid_utils.ts?v=l7tvw53z";import{randomBytes as g}from"/-/deno.land/x/web_bson@v0.2.3/src/parser/utils.ts?v=l7tvw53z";import{BSONTypeError as p}from"/-/deno.land/x/web_bson@v0.2.3/src/error.ts?v=l7tvw53z";import{equals as f}from"/-/deno.land/x/web_bson@v0.2.3/deps.ts?v=l7tvw53z";function i(o,t){if(!Object.prototype.hasOwnProperty.call(o,t))throw new TypeError("attempted to use private field on non-instance");return o[t]}var h=0;function c(o){return"__private_"+h+++"_"+o}var n=c("_bytesBuffer"),e=c("_id"),y=Symbol.for("Deno.customInspect"),r=class{get id(){return i(this,n)[n]}set id(t){i(this,n)[n]=t,r.cacheHexString&&(i(this,e)[e]=x(t))}toHexString(t=!0){if(r.cacheHexString&&i(this,e)[e])return i(this,e)[e];let s=x(this.id,t);return r.cacheHexString&&(i(this,e)[e]=s),s}toString(){return this.toHexString()}toJSON(){return this.toHexString()}equals(t){if(!t)return!1;if(t instanceof r)return f(t.id,this.id);try{return f(new r(t).id,this.id)}catch(s){return!1}}toBinary(){return new d(this.id,a.SUBTYPE_UUID)}static generate(){let t=g(16);return t[6]=15&t[6]|64,t[8]=63&t[8]|128,t}static isValid(t){if(!t)return!1;if(t instanceof r)return!0;if(typeof t=="string")return l(t);if(t instanceof Uint8Array){if(t.length!==16)return!1;try{return parseInt(t[6].toString(16)[0],10)===a.SUBTYPE_UUID}catch(s){}}return!1}static createFromHexString(t){let s=u(t);return new r(s)}[y](){return`new UUID("${this.toHexString()}")`}constructor(t){if(this._bsontype="UUID",Object.defineProperty(this,n,{writable:!0,value:void 0}),Object.defineProperty(this,e,{writable:!0,value:void 0}),t===void 0)this.id=r.generate();else if(t instanceof r)i(this,n)[n]=t.id,i(this,e)[e]=i(t,e)[e];else if(ArrayBuffer.isView(t)&&t.byteLength===16)this.id=t;else if(typeof t=="string")this.id=u(t);else throw new p("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");i(this,n)[n]=this.id}};r.cacheHexString=void 0;export{r as UUID};
